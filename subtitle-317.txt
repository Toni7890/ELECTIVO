Así que ahora pasamos de una especie de SQL y los contratos que necesitamos para hablar con una sola tabla a vincular varias tablas, y aquí es donde viene el verdadero poder, y aquí es donde surge la complejidad. Así que hasta ahora, debería ser muy simple. Cuando empiezas una empresa, vamos a fingir que vamos a crear una pequeña empresa para crear una aplicación para gestionar la música. Cuando se crea una empresa, se crea una aplicación, muchas aplicaciones necesitan bases de datos. Además, debe diseñar la base de datos para su aplicación. Y, a menudo, se trata en gran medida de un esfuerzo de equipo con muchas personas diferentes con habilidades. Algunas personas se preocupan por el usuario, las capacidades del usuario final, otras se preocupan por el rendimiento, etc. Así que el diseño de bases de datos, lo que les mostraré más adelante es solo el principio del diseño de bases de datos, pero los conceptos básicos son muy poderosos. Y es algo en lo que las personas inteligentes deberían dedicar tiempo al diseño de bases de datos. Por lo tanto, es un proceso muy colaborativo y, si nos fijamos en el diseño de bases de datos para las aplicaciones, hacemos dibujos disparatados, ¿verdad? Y en estas imágenes disparatadas que estamos capturando, se trata básicamente de varias tablas. Mesa, mesa, mesa, mesa, y esta base de datos en particular trata sobre eventos, como, ya sabes, reservar un refugio para pícnic en un parque, ¿verdad? ¿A qué horas, quién va a estar allí, quién lo reservó? Todas estas otras cosas. Y lo que estamos empezando a mostrar es cómo estas tablas están conectadas entre sí. Así que cada una de estas pequeñas flechas, esta es una tabla, y estas son las columnas de la tabla, y algunas de las columnas son columnas especiales que representan relaciones con otras tablas. Y no vamos a entrar en todos los detalles, con el tiempo pueden entrar en algunos detalles y ver lo que significa esta pequeña flecha, que significa uno y esto significa muchos, etc., etc. Y todo esto está lleno de cosas sofisticadas, así que hablaremos de esto más adelante. Pero esto es más o menos lo que buscamos, vamos a hacernos una idea de cómo queremos que se almacenen los datos de nuestra aplicación en la base de datos. Y este se convierte entonces en nuestro esquema y en el contrato. Así que hicimos una cosa con dos, hicimos una tabla con dos columnas, y eso era un esquema y un contrato, pero ahora vamos a crear varias tablas con muchas columnas y algunas columnas que están específicamente ahí para conectarse de una a otra. Así que si trabajas en una aplicación grande, puedes entrar y ver una imagen como esta en la pared. Y si echáis un vistazo, ¡vaya! Eso es muy importante, ¡debe ser muy complejo! Y, para esta aplicación, probablemente represente años de ingeniosa ingeniería para garantizar que la aplicación funcione bien. Pero básicamente así es como, no sé qué es, un sistema de registro médico de mecker abierto, simplemente tomé prestada la imagen. Así es como se almacenan los datos en su base de datos. Y estas cosas pueden ser muy complejas y el proyecto en el que trabajo, llamado Sakai, probablemente sea cuatro veces más grande que esto. Pero si lo ampliamos, lo cual no es posible, es solo una tabla, algunas columnas y algunas conexiones. Y luego, sí, hay una tabla, bueno, esa es un poco compleja. Aquí hay una tabla, algunas columnas y dos conexiones. Así que, sí, parece compleja a primera vista, pero en última instancia solo estamos intentando averiguar qué tablas vamos a hacer, qué vamos a poner en esas tablas y, a continuación, cómo vamos a conectar las tablas. Y las conexiones son lo que hace que estas cosas sean tan poderosas. Podríamos poner todos estos datos en un archivo, pero entonces esto funcionaría terriblemente lento. Por lo tanto, la desventaja de pensar en el aspecto que tendrán sus datos es que, cuando termine, será rápido. Muchas veces no nos preocupamos demasiado por la rapidez con la que se ejecutará su programa. Pero cuando se trata de escanear datos, especialmente si son muchos datos, uno piensa mucho en eso. Así que la idea es averiguar los datos que necesitas representar, y luego hacer un dibujo y, luego, líneas entre esas imágenes, ¿verdad? Y la regla básica que vamos a usar es no poner dos veces los mismos datos de cadena. Por ejemplo, si tenemos una columna de algo, no pongas a Chuck dos veces. Así que eso es malo. Así que si tienes alguna columna y estás replicando los datos de la misma cadena dos veces, eso no es bueno. Lo que quieres hacer es hacer otra tabla y poner un Chuck aquí y darle un número como el 1. Y luego ponle 1, 1 para indicar que algo pertenece a Chuck, lo que significa que estás modelando datos en una conexión entre una tabla y otra. Analizaremos esto con gran detalle. Así que la regla básica es no poner los mismos datos de cadena dos veces, sino usar una relación. Y la otra cosa es como modelar el mundo real. Si tienes usuarios y pistas y granjas de árboles de Navidad y lo que sea, tendrás una tabla para las granjas de árboles de Navidad y tendrás otra tabla para los tipos de árboles de Navidad y tendrás otra tabla para lo que sea. Muchas veces se empieza a crear una especie de aplicación, por lo que la aplicación que nuestra pequeña empresa va a crear es una aplicación que registra el audio. Nuestra empresa ha decidido que la gente ya no utilice álbumes y no esté interesada en comprar CDs enteros de música. Así que vamos a vender música por temas. Creo que es una gran idea, y creo que todos nos haremos ricos con esta pequeña empresa. Y esta es la interfaz de usuario que inventé, o que hice una captura de pantalla de otro vendedor. Pero, sea lo que sea, este es el programa que vamos a crear. Vamos a hacer algo para hacer canciones. Ahora, con solo mirar esta interfaz de usuario, vemos algunos problemas de inmediato. Y a menudo, si solo intentas convertir esto en una hoja de cálculo, estas cosas se convertirían en el problema. Y el problema tiene que ver con los datos replicados en columnas. Así que está genial, todo está bien, hasta que aparezca el mismo nombre del artista en las columnas. Podrían ser una o cientos, porque Black Sabbath ha escrito cientos y cientos de temas, e incluso en la columna de álbumes, eso es un problema. Y luego empeora aún más cuando estás en la columna de géneros, pones el hilo un millón de veces. Y si has estado escribiendo programas en Python, terminan muy rápido, y eso se debe a que las únicas tareas que te he dado son pequeñas. Pero cuando vas a hacer un millón o un billón de cosas, la diferencia entre el metal y el número 2, 2, 2, 2, 2, 2, para replicarlo es realmente muy significativa. Como no se trata solo de una cadena de seis o cinco caracteres, podría ser una cadena muy larga, por lo que en los datos hay que tener en cuenta las cadenas muy largas. Y ahí están los problemas, toda esta replicación. Resulta que tenemos una persona de interfaz de usuario en la sala, y la persona de interfaz de usuario a la que le decimos: «Hola», somos expertos en bases de datos. Hicimos una clase en línea y sabemos que no se deben replicar datos y la persona que interactúa con la interfaz de usuario dice: «Oh, no». Con estos datos replicados, hemos realizado encuestas y eso es exactamente lo que el usuario quiere ver. Y eso no se puede discutir. Si eso es lo que el usuario quiere ver, eso es lo que ve. Pero aún tenemos que escribir una aplicación eficaz. Y ahí es donde empezamos a realizar un ejercicio de modelado de datos. Cuando decimos: este es el tipo de cosas que queremos representar y este es el tipo de interfaz de usuario que queremos soportar, ¿cómo podemos crear un modelo de datos realmente bueno? Por lo tanto, no es que haya que cambiar la interfaz de usuario para que sea buena, sino que se cambia el modelo de datos para representar lo que queremos y, a continuación, se construye de forma que la interfaz de usuario sea exactamente lo que el usuario quiere. Así que la idea es ver los datos que va a ver tu aplicación, y tenemos todas estas columnas, ¿y tú dices si esta columna representa algo en el mundo real? ¿O es solo otro atributo de una cosa? Así que hay como una cosa y luego los atributos de la cosa, o dos cosas. Así que hay que revisar todas las columnas, y eso es lo que vamos a hacer, vamos a ver todas las columnas y vamos a discutir. Así que ahora mismo imagina que estamos en una sala de conferencias, sentados alrededor de una mesa. Vamos a hacer un dibujo, y este dibujo se parece a esa cosa, tiene pequeñas cajas y líneas, ¿verdad? Vamos a hacer un dibujo de cuadros y líneas, y ahora mismo tenemos una pantalla en blanco. Así que la primera pregunta, en realidad, en estas reuniones suele ser por dónde empezar. Porque tienes muchas cosas. En nuestro ejemplo, es muy simple. Y resulta que no es tan importante el punto de partida. Aunque empieces por el lugar equivocado, acabarás teniendo esta red de información, y todo estará conectado, y todo saldrá bien si lo haces bien. Pero sí que simplifica el dibujo si empiezas por el lugar correcto. Así que, la forma en que me enseñaron, a empezar por el lugar correcto, fue a pensar en lo que es más esencial para esta aplicación. ¿Cuál es la descripción de esta aplicación en una sola frase? Y en esta aplicación, es algo que gestiona las pistas. No se trata de gestionar álbumes, no se trata de gestionar artistas o de gestionar géneros, es gestionar pistas. Y más o menos lo vemos en nuestra interfaz de usuario. Vemos que cada línea es una pista. Y eso lo hace más fácil. La primera mesa que vamos a construir es la mesa de atletismo. Y una vez que construyamos la tabla de seguimiento, tenemos que analizar todas las demás cosas y decir: mira, cuáles de estas cosas son tablas en sí mismas y cuáles son solo atributos de la pista. ¿Está bien? Y resulta que cosas como los números, y la estrella es solo un número, es cinco, todos son cinco, al parecer solo me gustan las cosas o las odio, y luego este es el número de jugadas. Y entonces piensas: Oh, eso es parte de eso, eso es parte de una canción, eso es parte de una canción. Bueno, y ahora llegamos a las tres cosas que no forman parte de las pistas porque tienen los datos replicados, esa es la señal de alerta que dice que no forman parte de una pista. Entonces, alguien se acerca a la pizarra, coge un trozo de pizarra blanca y dice: « Es nuestra primera mesa, es una tabla de pistas y va a tener una puntuación, una longitud y un recuento». Supongo que también debería haber un título para esta columna, así que tenemos un campo de título, título. Vale, ahora estamos bien, ¿verdad? Tenemos eso, cierto, lo tenemos. La pregunta es, ¿qué tiene que ver con eso? ¿Verdad? Bueno, ¿qué es lo siguiente que hay que dibujar? Bueno, las pistas podrían estar conectadas a artistas, podrían estar conectadas a álbumes, así que digamos que los álbumes tienen muchas pistas. Entonces, lo siguiente que vamos a hacer es hacer una tabla de álbumes. Y vamos a decir en nuestra pizarra blanca que ahora mismo estamos dibujando en una pizarra, aún no estamos escribiendo código. Esas canciones pertenecen a álbumes y ahora es bastante fácil pensar que a lo que pertenecen los álbumes, bueno, los álbumes pertenecen a grupos similares. Si eres un experto en música, entenderás que simplificamos demasiado las cosas, y ese es un buen argumento para crear una empresa, pero vamos a fingir que el mundo es simple y que las canciones pertenecen a álbumes, que pertenecen a artistas. Así que ya casi hemos terminado nuestra reunión. Así que tenemos artistas, álbumes y canciones, y hemos hecho un dibujo. Y la pregunta es, ¿a dónde pertenece el género? ¿Con qué se relaciona el género? ¿El género está relacionado con un álbum? ¿El género se relaciona con un artista? ¿O el género está relacionado con una canción? Ahora puede que quieras ir a tu iTunes, ir a una canción y cambiar su género. Cámbialo para que sea fácil de escuchar. Ahora bien, si la canción era, quiero decir, si el género estaba relacionado con el artista, es decir, este es un álbum, lo siento. Significa que entonces cambiaría inmediatamente todos esos temas por uno más fácil de escuchar, porque eso significa que los álbumes tienen un atributo propio de su género. Si fuera lo mismo para un artista, eso significa que todos tus AC/DC pasarían a ser fáciles de escuchar. Y si fuera un atributo de la canción, solo este se cambiaría por el de fácil escucha. Así que la pregunta es, cuando entras en ese sistema y cambias una cosa, ¿cambia todo eso según el álbum o el artista? Bueno, puedes hacer una pausa y seguir adelante, pero te voy a decir que resulta que si cambias eso solo cambia una cosa. Eso te dice que en la reunión discutiremos sobre esto. Creo que debería estar aquí, y creo que debería estar aquí. Y luego dices: bueno, pero si lo haces de esta manera, significa que va a cambiar. Entonces la persona de la interfaz de usuario dice: no, no, no podemos hacer que se conecte al álbum porque entonces nuestros usuarios se enfadarían mucho con nosotros y, bla, bla, bla, bla, y no ganaríamos mucho dinero. Así que cuando todo esté dicho y hecho, habréis discutido. Te llevó mucho más tiempo discutir esta última parte, esta era la parte difícil, decir que está bien, el género pertenece a la canción, simplemente es así. Y este es un ejemplo simple y trivial de cómo el modelo de datos crea las características de la aplicación. Así que cuando empezamos vimos este panorama general: lo que hay en el modelo de datos determina lo que la aplicación es capaz de hacer. Y tenemos que elaborar el modelo de datos correcto para que todo sea muy eficiente. Ahora que hemos dibujado este dibujo en la pared de nuestra sala de conferencias, en algún momento tendremos que mapearlo en una base de datos, en una estructura de base de datos. ¿Vale? Vamos a averiguar cómo mapear realmente esa imagen lógica que acabamos de dibujar en una imagen física, exactamente cómo vamos a representarla en una base de datos.