Así que bienvenidos de nuevo al almuerzo, ¿verdad? Si recuerdas la mañana de la última conferencia en la que discutimos, bebimos un montón de café, garabateamos en pizarras blancas, borramos pizarras blancas y discutimos sobre el lugar al que pertenecía el género. Pero cuando acabamos de decir y terminar, acabamos con esta imagen que todavía está en la pizarra blanca y ahora volvemos de comer. Así es como ahora las bases de datos representan los datos. Tenemos que ser un poco más explícitos. No hay nada mágico en las bases de datos, pero cuando se crea un modelo de datos no se debe pensar demasiado en la base de datos de forma explícita. Este modelo «lógico» se convierte en lo que llamamos un modelo físico, mapeándolo en la base de datos. Por lo tanto, lo que hacemos es tomar cada una de las tablas y las relaciones entre las tablas y aumentarlas con pequeños fragmentos de información. Así que, aquí está la tabla de seguimiento, así que crearemos una tabla llamada Track. Tomamos el título, la puntuación, la longitud y el recuento, y se convierten en columnas de la tabla. Esos son los datos que tenemos que representar. Y luego tendemos a agregarle cosas. Y entonces vamos a añadir lo que llamamos una clave principal. Y una clave principal es una forma de referirnos a una fila en particular, por lo que es un número único, como 1, 2, 3, 4. Así que cada álbum va a terminar con un número. Insertaremos el título y el título recibirá un número. ¿Verdad? Y luego usamos ese número en una columna de una tabla diferente para señalarlo. Así que estas claves principales son los puntos finales a los que apuntamos. Para poder crear una flecha para un álbum en particular, tenemos que agregarle una identificación. Así que añadimos una clave principal. Y luego, la otra cosa que hacemos es sumar las columnas que están al otro extremo de la flecha, el punto inicial de la flecha. Por convención, en este modelo en particular, pongo el nombre all id a las claves principales. En la pista hay que pensar en all id y luego en album_id como punto de partida. Así que album es el nombre de una tabla, seguido de un subrayado y seguido de un id. Ahora bien, no hay reglas sobre cómo nombrar estas cosas. Podrían llamarse X e Y si quisieras, pero, como hemos aprendido al programar en Python y otros lenguajes de programación, crear nombres sensatos realmente reduce la carga cognitiva que supone entender a qué diablos te referías al crearlos. Así que creamos una convención, una convención de nombres. Y, además, tenemos terminología para cada una de estas cosas. Una clave principal es aquella para la que hay una clave para cada fila. Se usa para apuntar a esa fila en otras tablas. La clave externa es una de estas columnas que agregamos para que sea el punto de partida de las flechas. La clave principal es el punto final de la flecha y la clave externa es el punto inicial de la flecha. La única otra cosa que podemos hacer es designar o no una de las columnas, a veces más de una, como lo que se denomina clave lógica. La clave lógica es esa cosa única que podríamos usar para buscar esta fila desde el mundo exterior. En este caso, el título del álbum podría ser una forma de buscarlo. En plan, oh, dónde está Led Zeppelin IV. Escribe IV y lo buscará. Así que Led Zeppelin IV será el título. Ahora todo lo que hacemos es decir, oye, base de datos, no estamos buscando a estas personas por calificación, longitud o recuento. Pero podríamos estar buscando las canciones por título. Así que, de alguna manera, en tu almacenamiento tal vez dejes algunos atajos para llegar a esto de manera más eficiente o efectiva. Así que la clave lógica es realmente nuestra manera de decir que podemos usar esto en una cláusula WHERE. Podríamos usarla en una cláusula WHERE, ayúdame con esto. Podríamos usarlo en una cláusula WHERE. Y también, a veces, es como si también lo usáramos en una cláusula ORDER BY o en una cláusula WHERE. Y esas son las claves lógicas. Así que tenemos estas tres cosas: claves principales, claves lógicas y claves foráneas. Así que si seguimos dibujando estos dibujos, empieza a parecer complejo , pero luego resulta muy simple. Si tomamos todo el modelo de datos y sumamos estas claves principales, claves lógicas y claves foráneas para modelar el principio y el final, el principio y el final de la flecha, el principio y el final de las flechas, el principio y el final de las flechas, tenemos que incluir las claves principales en todas las tablas. Colocamos claves foráneas en las tablas que tienen puntos de partida. Y luego indicamos que ciertas cosas son nuestras claves lógicas. Parece un poco complejo, pero una vez que has hecho el dibujo y tienes la convención de nombres para estas cosas, es una tarea sorprendentemente manual. El mapeo de lo lógico a lo físico es increíblemente sencillo, siempre y cuando se tenga una convención de nomenclatura. Ahora, si entras en una organización y asistes a esta clase y dices: «Me gusta», la convención de nombres del Dr. Chuck es increíble. De hecho, robé esta convención de nombres de una cosa llamada Ruby on Rails. El nombre del identificador, el artist_id. Es una buena convención de nombres. Y las convenciones de nombres son algo así como artísticas. Algunos crees que son más bonitos o no más bonitos, pero cualquier convención de nomenclatura funciona. Y entras y dices: Oh, fui a esta clase y aprendí la convención de nombres de id y table_id y dirán: bueno, no usamos eso, usamos esta cosa en la que empezamos con una i minúscula y luego ponemos en mayúscula el iTrackId, que esa sería su clave principal para una pista, o tal vez la llaman pTrack Id por clave principal, ¿verdad? Así que ese sería el nombre de esta cosa y tú estás en esta empresa y dices: «Guau». PTrackID, eso parece basura. Es una idea terrible y estúpida. Bueno, no hagas eso. Bueno, esta no es una convención de nombres superior a esta otra, sin embargo, hacen esta otra, ¿verdad? Lo importante es que haya una convención de nombres, y cuando trabajes para una empresa, simplemente aprende su convención de nombres y no te quejes de su convención de nombres, a menos que los conozcas o tal vez estés fuera a tomar un café o algo más tarde y pienses: bueno, ¿cómo es que nunca habéis seguido la genial convención de nombres de Ruby on Rails? Fui a una clase y estuvo muy bien siempre y cuando seas amable y no los amenaces ni les digas lo tontos que son eligiendo una convención de nombres equivocada. Así que ahora lo que vamos a hacer es convertir esto en una nueva tabla. Bien, voy a usar el asistente para crear una nueva tabla en nuestra pequeña base de datos. Pasemos a, todavía estamos en nuestra base de datos. Y voy a ir a Estructura de la base de datos. ¿Dónde está el nuevo botón de tabla? Mesa nueva, mesa nueva. Archivo. Nueva tabla, crea una tabla. Ahí vamos. Edita, crea una tabla. Bien, vamos a crear una tabla, y necesito ver que estoy buscando mi hoja de trucos. Empezaremos con la tabla de artistas. Vamos a añadir un campo a la tabla de artistas y llamaremos al primer campo un campo de identificación y será un número. Vamos a decir que no es nulo, sino que es una clave principal. Le estamos diciendo que vamos a usarla mucho y, si estamos enlazando a esta tabla, significa que la estamos usando mucho. El incremento automático significa que, como programadores, no tenemos que especificar este valor, sino que se especificará automáticamente. Porque prácticamente 1, 2, 3, 4, 5 son los valores que vamos a utilizar. Y luego, sin signo es si es positivo o negativo. Y para este, voy a dejar eso en blanco. La otra cosa que hay en esta mesita, volvamos a mirar nuestro dibujito, es el nombre. Añada otro campo y le pondremos un nombre a ese nombre. Uy. Nombre en minúscula. Y lo convertiremos en un campo de texto. Y en este caso no vamos a darle una longitud. Y hay una forma más adelante de dar longitudes a las otras. Y luego pulsaremos el botón OK. Y cuando todo esté dicho y hecho tenemos una mesa de artistas, ¿vale? Esta es nuestra antigua tabla de usuarios, esta es nuestra tabla de artistas. Podríamos crear una base de datos completamente nueva si quisiéramos, pero no vamos a hacerlo, simplemente vamos a incluir todas estas cosas. En realidad, deshagámonos de esta mesa. Deshazte de los usuarios. Editar, eliminar tabla. Adiós a la tabla de usuarios. Eso es de la conferencia anterior. Así que ahora tenemos una mesa de artistas. ¿Está bien? Así que esa es la forma mágica de crear una mesa. La siguiente tabla que vamos a crear es la tabla de géneros. Ahora la idea es que tendemos a trabajar de afuera hacia adentro. Las hojas de este árbol de afuera hacia adentro. Así que creamos la tabla de artistas, luego crearemos la tabla de géneros y, a continuación, crearemos la tabla de álbumes. Y, a continuación, crearemos la tabla de pistas porque queréis crear los extremos de las flechas antes de crear el principio de las flechas, ¿de acuerdo? Vamos a crear el género y ahora voy a usar SQL porque es mucho más rápido para mí escribir. Aquí está la TABLA DE CREACIÓN, vamos a decir que este tipo es un NÚMERO ENTERO, NO ES NULO, tiene una CLAVE PRINCIPAL y se AUTOINCREMENTA, y es ÚNICO. Y esa es nuestra manera de decir que hay que dar a cada fila un número pequeño. Así que vamos a Execute SQL y pongo esto aquí. Y luego lo ejecuto. Funcionó y si echo un vistazo a nuestros datos de navegación o a la estructura de nuestra base de datos, el género está ahí y el género tiene dos columnas, identificador y nombre. Y luego tenemos las otras tablas. Ahora vamos a crear la tabla Álbum. Ahora, la diferencia de la tabla Álbum es que la tabla Álbum es nuestro primer ejemplo de clave externa. Así que esta es nuestra clave externa. Hemos estado poniendo las claves principales en todas las tablas. La clave principal prácticamente dice esto una y otra vez, este largo INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE. Solo dilo una y otra vez. Ahora, vamos a tener una clave externa que es el inicio, la clave externa, la clave principal. ¿Verdad? Entonces, vamos a llamarlo número entero. En otras bases de datos puedes agregarle algunas cosas, hablar sobre qué hacer con el elemento principal, pero no lo vamos a hacer por ahora. Solo vamos a decir que es un número entero, que es el punto de partida de una flecha. Y lo llamaremos artist_id solo para refrescarnos la memoria de que eso es lo que está pasando allí. Pon SQL, pégalo, ejecútalo, puf, funciona. Estructura de la base de datos. Ahora tenemos el género, y veamos el último. ¿Está bien? Así que la última es la canción. ¿Está bien? Así que CREATE TABLE, el nombre de la tabla. Tenemos este tipo de cosas que ya estamos cortando y pegando un montón de veces. Tenemos una clave principal, tenemos una clave lógica. Resulta que es verde, es TEXTO. Y luego tenemos dos claves foráneas. Porque, si recuerdas, salían dos flechas de Track. Tanto al álbum como al género. Así que recuerda, oh, Album. album_id, genre_id. La convención de nombres es tu amiga. Y luego tenemos algunas cosas que son números enteros, como la longitud, la clasificación y el conteo. Luego los colocamos. Así que ahora tenemos las columnas y las filas y todas las claves foráneas de Track. Y luego lo ejecutaremos. Y si echamos un vistazo a los datos, veremos que los hemos hecho todos. El álbum ahora es complejo. Y todas estas cosas. Espera un segundo, ¿no lo hice? ¿En qué me equivoqué? Oh, no, Track es el más complejo. Así que Track tiene un montón de cosas. Así que ahí vamos. Así que si echamos un vistazo, tenemos todas estas cosas, y hemos traducido nuestro modelo lógico a un modelo físico, y hemos traducido el modelo físico a una serie de sentencias CREATE. Hemos ejecutado esas instrucciones CREATE y ahora hemos representado los distintos tipos de tablas en las que queremos insertar datos. Así que vamos a detenernos aquí. Pero ahora vamos a empezar a insertar datos en estas tablas.