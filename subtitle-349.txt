Así que ahora vamos a hablar de lo que estamos intentando lograr con un bucle, ¿verdad? Estamos intentando, sabemos cómo funcionan mecánicamente, pero ¿qué estamos buscando? ¿Qué pasa si buscamos el valor más grande o comprobamos si 42 es miembro de un conjunto o algo así? ¿O buscas la letra más grande, como la función max? Así que vamos a construir bucles con la idea de hacer algo con cada valor del conjunto por el que estamos iterando. Y luego obtener algún tipo de resultado. Y el patrón que vamos a hacer es escribir un bucle for. Y, de hecho, en los dos siguientes segmentos, voy a hacer exactamente lo mismo con el bucle. Pero vamos a hacer algo antes de que comience el ciclo: establecer algunos valores iniciales para algunas variables. Y luego haremos algo con cada uno de los valores de nuestra lista. Y luego, no sabemos cuál es el valor más grande mientras el bucle está en ejecución. Y nuestro objetivo es que, cuando el ciclo finalmente termine, tengamos algo. Ya sea el máximo, el mínimo, el promedio, el total, cuántas cosas hay, cuántas cosas coinciden. Y así, las iteraciones nos acercan a conocer la respuesta. Pero no saben la respuesta al instante, así que tenemos que trabajar para encontrar la respuesta. Configurando algo y luego revisándolo un montón de veces. Y luego tenemos una especie de absoluto, la verdad sale al final. Y lo verás en un segundo. Así que aquí está el pequeño bucle que vamos a hacer. Y voy a hacer esto una y otra vez, y estos números, te vas a cansar de estos números. Para alguna variable, variable de iteración en 9, 41, 12, 3, 74, 15. Imprimimos un antes. Así que vamos a hacer algo antes del bucle. Vamos a hacer algo durante el bucle y después del bucle. Ahora mismo, lo estoy imprimiendo todo. Así que ya ves cómo funciona el bucle, ¿vale? Vale, pues aquí hay un pequeño problema. Te voy a mostrar varios números y quizás sea un millón o quizás sean 6, no lo sé. Pero no sabes cuántos te voy a mostrar. Y quiero que me digas, cuando todo esté dicho y hecho, cuál es el número más grande. Y no va a ser demasiado difícil. Pero imagina que tuvieras que hacer esto para un millón de números como ser humano. Que estabas sentado ahí y los números pasaban y pasaban y pasaban. ¿Cómo resolvería realmente tu cerebro el problema? Así que aquí, ¿listo? Aquí van algunos números. Entonces, ¿lo entendiste? ¿Obtuviste el número más grande? No es muy interesante saber cuál era el número más grande. No eran tantos números. ¿Qué hacía tu cerebro para rastrear ese problema, para resolverlo? ¿Qué hacía tu cerebro? ¿Y si realmente tuvieras que hacer eso para un millón de números? Y tampoco eran números pequeñitos, eran una especie de números medianos. Y tenías que hacer un millón de ellos, ¿cuál sería tu técnica? Además de huir, porque a los humanos no se les da bien esto. Pero, ¿cuál sería la técnica precisa que utilizarías? Y aquí están los números. Ahora, en realidad, como seres humanos, nos encanta mirar estos números. Como, oh, 74. Pero luego te preguntas cómo los encontró tu mente exactamente, ¿verdad? Nuestras mentes dicen, como [SONIDO], hay 74. Nuestra mente no los mira de la forma en que los mira un ordenador. Simplemente se acerca a 74 y es una especie de [SONIDO]. Pero no es así como los ve un ordenador. Un ordenador tiene que considerarlos como 3, 41, 12, 9, 74, 15. Concluyo al final que 74 es el número más grande, ¿verdad? Pero un humano es solo [SONIDO] 74. Así que los humanos piensan sobre esto de manera diferente. Así que tenemos que darnos cuenta de que el propósito de este último pequeño ejercicio era pensar, cuando construimos bucles, cómo van a atacar las computadoras este tipo de problemas. Lo atacan secuencialmente. No lo atacan mágicamente como lo hacemos los humanos. Y la forma en que lo haces es crear en tu cabeza, y probablemente lo hiciste, una idea de cuál es el número más grande que he visto hasta ahora. Como una variable. Empezamos diciendo: Oh, no he visto ningún número hasta ahora, así que pondremos -1 ahí. Y luego ves el 3 y dices: bueno, ese primer número también es el más grande que he visto hasta ahora, así que 3 es bastante bueno. Si nos detenemos ahora y te digo que ese es el último número, el número más grande es el 3. No es el número más grande hasta que te diga que hemos terminado. Vemos 41, es como: vaya, 3 es un número malo, 41 es aún mejor. Es mucho mejor, mantendremos el 41 como nuestro hasta ahora, hasta ahora, todo bien. Pero aún no hemos terminado, tenemos que seguir adelante. 12, vaya, el 12 no sirve porque 41 es más grande, nos quedaremos con 41. ¿9? 9 no está bien, estamos en muy buena forma. ¿El 41 es el más grande? No, pero es el más grande hasta ahora, así que lo sabemos. Ahora vemos 74, vaya, eso es mucho mejor que 41, así que haz un seguimiento de esa. Y luego decimos: 15, no, parece que 74 es bastante bueno. Y ahora estamos todos listos, y vemos que son 74. Lo que pasa es que al final del ciclo, lo único que sabíamos era el más grande que habíamos visto hasta ahora y cuando os digo que ya hemos acabado. Entonces, el más grande que hemos visto hasta ahora, como un puf, es el más grande, ¿verdad? porque es todo lo que vamos a ver. Así es como hay que construir estos bucles en Python. Así que aquí hay un fragmento de código que hace esta parte lógica, ¿de acuerdo? Así que voy a crear una variable. Y recuerda que las variables pueden tener guiones bajos, y voy a llamar a esta variable largest_so_far. Y voy a ponerlo en -1 al principio. Y antes de que comience el ciclo, recuerda que dije que hay cosas que hacemos al principio del ciclo y luego cosas que hacemos durante el ciclo. Y luego nuestra recompensa es después del ciclo, después del ciclo. ¿Está bien? Así que antes del bucle establecemos el más grande que hemos visto hasta ahora, que no hemos visto nada, así que decimos -1 y luego lo imprimimos. Así que antes del bucle, el valor más grande hasta ahora es -1. Luego tenemos una variable de iteración, the_num pasará sucesivamente por 9, 41, 12, 3, 74. Ejecuta este bloque de código cinco veces, seis veces, una vez para cada uno de esos números. Y preguntaremos: si el número que estamos viendo, en este primer caso 9, es mayor que el más grande hasta ahora, entonces el mayor hasta ahora es el número que acabamos de ver porque es más grande que el que vimos antes. Así que largest_so_far es el más grande hasta este momento. Y luego, básicamente, lo agarramos. Luego imprimimos, para cada iteración, la más grande hasta el momento. Así que la primera vez que obtenemos un 9 y el más grande que hemos visto hasta ahora es 9 porque es el primero que vimos y es el más grande que hemos visto. Luego subimos, avanzamos a 41, 41 es the_num. Y luego 9 es largest_so_far, 41 es mayor que él, entonces metemos el 41 y añadimos largest_so_far. Así que el más grande que hemos visto hasta ahora es 41. El que acabamos de ver tenía 41, vuelve a subir, ahora 12 van a correr. Así que vemos 12 y el más grande hasta ahora sigue siendo 41. Así que no hacemos nada, volvemos a subir, corremos 3, obtenemos 3, el más grande hasta ahora es 41, nada tiene que cambiar. Luego volvemos a correr, obtenemos 74, 74 carreras, y ese es el número más alto del nuevo campeón. Y luego retrocedemos una vez más, 15, y en este código no sabemos cuántas vamos a hacer. Podríamos hacer 5, 6 o un millón, pero no nos importa, solo nos quedamos con lo mejor que estamos haciendo, es lo más grande hasta ahora. Así que tenemos 15 y el más grande hasta ahora sigue siendo 74. Y ahora el bucle dice que has acabado y salimos. Ahora, largest_so_far es en realidad el más grande de la secuencia de números, que es 74. Así es cómo, es una diapositiva bastante desordenada. Básicamente, así es como Python puede revisar una lista y ver la más grande hasta el momento y, cuando terminemos con la lista, esa es la más grande. Así que entiendes la idea. Establecimos algo antes, hacemos algo con cada valor y, al final, obtenemos la recompensa de lo que buscábamos en primer lugar. A continuación vamos a hablar sobre más de estos modismos bucles y sobre cómo encontrar los más pequeños, cómo contar cosas, cómo hacer promedios y sumas y cosas así.