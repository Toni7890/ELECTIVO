Así que ahora, vamos a combinar todo lo de las clases anteriores y vamos a crear nuestro primer programa. Así que antes de crear este programa, necesitamos hablar un poco sobre la documentación. Hablamos de las variables mnemotécnicas como algo amigable para los humanos. Otra cosa que es amigable en los programas para humanos, y te darás cuenta de que el humano con el que eres tan amable cuando escribes código y lo haces bien, eres tú mismo. Así que unos buenos nombres de variables te van a ayudar mucho. Podrían ayudar a tu ayudante de enseñanza, pero también te van a ayudar a ti. Comentarios. Los comentarios son una forma de añadir texto que Python ignora a nuestros programas. Es una forma estupenda de hacernos una pequeña idea de lo que ocurre en el código. Tal vez aparezcan un par de líneas de 10 líneas que sean un poco complejas y quieras decir: «Oh, todo lo que se hace en realidad es invertir el orden de estas dos cosas», o quién sabe qué. O puedes documentar quién escribió el código y, de hecho, puedes tomar una línea de código y poner un signo de libra delante de ella en lugar de eliminar la línea de código. A veces, lo haces para depurar. Añades código de depuración y, cuando no quieres el código de depuración , pones un signo de almohadilla por si quieres quitarlo para volver a activarlo. Así que lo uso como una forma de activar y desactivar líneas de código. Así que esta es una frecuencia de palabras a la que siempre volvemos y lo que he añadido aquí es que he añadido cuatro comentarios. He añadido comentarios que básicamente nos ayudan a entender lo que está pasando, y recuerda que los llamo párrafos similares. Nuestro primer párrafo tiene un código legible por humanos, un texto legible por humanos. Obtenga el nombre del archivo y ábralo. Eso es lo que va a pasar en las dos líneas siguientes. Las siguientes cinco líneas son para contar la frecuencia de las palabras, tal vez debería decir hacer un histograma. Así que haz un histograma y podrás leer esto. Así que, de nuevo, no pienses en esto como si el profesor te dijera que tienes que escribir comentarios. Piensa en esto como: «Escribiré comentarios para recordar lo que estaba haciendo aquí. ¿Por qué escribí este código?» Así que escribe los comentarios para ayudarte. Ahora, lo último es que hemos acabado y estamos imprimiendo todo esto, ¿vale? Así que eso son comentarios, es una parte importante de la documentación del código para que puedas descifrarlo más tarde. Una vez más, el humano al que le vas a gustar por hacer todas estas cosas eres tú. Muy bien. Así que este eres tú y le estás haciendo un regalo al futuro, ¿verdad? Así que escribes comentarios para que en el futuro puedas leerlos. Porque en un día, una semana o un mes, no recordarás muy bien lo que estabas haciendo, así que continúa y escribe comentarios. Pero no los escribas porque yo lo dije. Escribe solo las que te parezcan útiles y no hagas algo como que x es igual a 1, signo de libra, pon uno en x. Es una tontería, todo el mundo puede averiguar qué significa x igual a 1. Así que no escribes comentarios tontos solo por tonterías, sino que los pones especialmente cuando tienes que entender lo que está pasando aquí para que la gente no tenga que leer con tanto detalle. Una de las cosas que harían sería leer esto y comprobar si realmente cumplía lo que dijiste que iba a hacer para ayudarte a depurarlo, por ejemplo. Así que eso son comentarios. La documentación es muy importante. Está bien. Ahora vamos a hacer nuestro primer código de programación. Ahora, el patrón que va a suceder aquí es un patrón que yo llamo y me enseñaron hace 25, 30, muchos años. El procesamiento de entrada y la salida son las cosas esenciales que hacen las computadoras. Recopilan algunos datos tal vez de un archivo o de un servicio web. Trabajan un poco en ello y luego producen algo. Entrar, trabajar, salir. El trabajo suele ser la parte difícil. Así que este es nuestro primer programa que demuestra estas tres cosas: entrada, procesamiento y salida. Es un programa de tres líneas con un comentario. Así que el problema que este programa intenta resolver, para aquellos de ustedes que han viajado a los Estados Unidos y han viajado a cualquier otro lugar, es que la planta baja de los hoteles en la mayor parte del mundo es la planta cero y la planta baja en los Estados Unidos es la planta única. Así que puede que os encontréis en un ascensor europeo preguntándoos cuál es el equivalente en Estados Unidos a este piso en el que estoy sentado. Entonces, si estoy en el piso siete, ¿cuál sería este piso si estuviera en los Estados Unidos? Ese es el problema que vamos a resolver. Probablemente no nos hagamos ricos si creamos una aplicación para esto, pero quizás alguien pueda introducir la aplicación europea de conversión de ascensores en alguna tienda de aplicaciones y tal vez tú te hagas rico después de todo. Pero por ahora basta con enseñarnos sobre un programa completo que introduzca, procese y emita. Este es un programa tan simple como yo podría crear. Así que echémosle un vistazo. Un comentario, convertir pisos de ascensores, que no tiene nada que ver con Python, tiene que ver con que tú o yo leamos sobre esto. A continuación, introduzca. Bueno, recuerda, la entrada imprime el mensaje y luego hace una pausa y espera. Luego escribimos y luego escribimos la tecla Enter, ¿verdad? Entonces este cero, es una cadena. La cadena termina ingresándose en la variable inp. Luego pasa a la siguiente línea y funciona en el lado derecho. Vamos a poner esta cadena a cero, tenemos que convertirla en un número entero, de lo contrario, no podemos agregarle ninguno. Si solo añadimos un valor inp más uno, obtendremos una traza. Pero si decimos int de inp, lo convertimos en un número entero. Ahora, si lo estropeas y pones a Bob, esto va a estallar porque int no puede convertir a Bob en un número entero. Pero como tenemos un cero aquí, estamos bien. Entonces le agregamos uno y lo almacenamos en usf, nombre de variable mnemotécnica, United States floor, inp, la entrada que recibimos del usuario. Aquí estoy usando buenos nombres de variables. Así que lo almacenamos y lo convertimos en uno y luego imprimimos US Floor comma usf, recordemos que la coma produce este pequeño espacio aquí abajo. Así que tenemos la entrada, el procesamiento y la salida de una manera que nos permite crear una aplicación. ¿Vale? Ahora, hay muchas cosas que tendrá que hacer. La mayoría de los programas no tienen una sola línea y hay mucho trabajo que tendremos que aprender, pero esto nos permite empezar. Así que hemos hablado de muchas cosas. Hemos hablado de constantes, hemos hablado de variables, hemos hablado de palabras reservadas, hemos hablado de tipos, hemos hablado de nombres de variables mnemotécnicas que son maravillosos y un poco confusos al mismo tiempo, de los operadores, de la precedencia de los operadores, nos centramos un poco en la división y hablamos de Python 2 frente a Python 3, de la conversión de tipos y de los comentarios y, por último, de escribir un programa completo. A continuación, vamos a empezar a hablar de la ejecución condicional, utilizando el if y el else y otras palabras reservadas. Aquí es donde parte de la inteligencia empieza a aparecer en los ordenadores. A continuación, la ejecución condicional.